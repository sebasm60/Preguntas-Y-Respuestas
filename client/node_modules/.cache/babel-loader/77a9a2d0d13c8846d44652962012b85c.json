{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sebastian\\\\OneDrive\\\\Softka\\\\Preguntas-Y-Respuestas\\\\client\\\\src\\\\components\\\\Preguntas.jsx\";\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Preguntas extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Deportes: [],\n      Arte: [],\n      Historia: [],\n      Geografia: [],\n      Ciencias: [],\n      Respuestas: []\n    };\n  }\n\n  async componentDidMount() {\n    //Obtengo las preguntas desde la bd y las guaro en el state.\n    const preguntas = await axios.get('http://localhost:5000/preguntas');\n\n    for (let i = 0; i < preguntas.data.length; i++) {\n      if (preguntas.data[i].categoria === 'Deportes/Pasatiempos') {\n        this.setState({\n          Deportes: [...this.state.Deportes, preguntas.data[i]]\n        });\n      } else if (preguntas.data[i].categoria === 'Arte y literatura') {\n        this.setState({\n          Arte: [...this.state.Arte, preguntas.data[i]]\n        });\n      } else if (preguntas.data[i].categoria === 'Historia') {\n        this.setState({\n          Historia: [...this.state.Historia, preguntas.data[i]]\n        });\n      } else if (preguntas.data[i].categoria === 'Geografia') {\n        this.setState({\n          Geografia: [...this.state.Geografia, preguntas.data[i]]\n        });\n      } else {\n        this.setState({\n          Ciencias: [...this.state.Ciencias, preguntas.data[i]]\n        });\n      }\n    }\n    /*Envio el state con las preguntas de cada categoria y escojo una de forma aleatoria, de esta forma cuando se carga la pagina ya tengo\r\n    cargadas las preguntas desde la bd y en local storage estan asignadas las que se escojieron de forma aleatoria*/\n\n\n    this.obtenerpregunta(this.state.Deportes, 1, 6, 'Deportes');\n    this.obtenerpregunta(this.state.Arte, 6, 11, 'Arte');\n    this.obtenerpregunta(this.state.Historia, 11, 16, 'Historia');\n    this.obtenerpregunta(this.state.Geografia, 16, 21, 'Geografia');\n    this.obtenerpregunta(this.state.Ciencias, 21, 26, 'Ciencias');\n    const respuestas = await axios.get('http://localhost:5000/respuestas');\n    this.setState({\n      Respuestas: [...this.state.Respuestas, respuestas.data]\n    });\n    this.obtenerRespuestas(this.state.Respuestas[0], JSON.parse(localStorage.getItem('Deportes')).id, 'RespuestasDeportes');\n    this.obtenerRespuestas(this.state.Respuestas[0], JSON.parse(localStorage.getItem('Arte')).id, 'RespuestasArte');\n    this.obtenerRespuestas(this.state.Respuestas[0], JSON.parse(localStorage.getItem('Historia')).id, 'RespuestasHistoria');\n    this.obtenerRespuestas(this.state.Respuestas[0], JSON.parse(localStorage.getItem('Geografia')).id, 'RespuestasGeografia');\n    this.obtenerRespuestas(this.state.Respuestas[0], JSON.parse(localStorage.getItem('Ciencias')).id, 'RespuestasCiencias');\n  }\n\n  obtenerpregunta(categoria, inicio, fin, catLocalStorage) {\n    let numeroAleatorio = Math.floor(Math.random() * (fin - inicio) + inicio);\n\n    for (let j = 0; j < categoria.length; j++) {\n      if (numeroAleatorio === categoria[j].id) {\n        localStorage.setItem(catLocalStorage, JSON.stringify(categoria[j]));\n      }\n\n      ;\n    }\n\n    ;\n  }\n\n  obtenerRespuestas(preguntas, idPregunta, catLocalStorage) {\n    let vectorRespuestas = [];\n\n    for (let j = 0; j < preguntas.length; j++) {\n      if (preguntas[j].id_pregunta === idPregunta) {\n        vectorRespuestas.push(preguntas[j]);\n      }\n\n      ;\n    }\n\n    ;\n    localStorage.setItem(catLocalStorage, JSON.stringify(vectorRespuestas));\n  }\n\n  async play() {\n    const deporte = JSON.parse(localStorage.getItem('Deportes'));\n    const arte = JSON.parse(localStorage.getItem('Arte'));\n    const historia = JSON.parse(localStorage.getItem('Historia'));\n    const geografia = JSON.parse(localStorage.getItem('Geografia'));\n    const ciencias = JSON.parse(localStorage.getItem('Ciencias'));\n    const resDeporte = JSON.parse(localStorage.getItem('RespuestasDeportes'));\n    const resArte = JSON.parse(localStorage.getItem('RespuestasArte'));\n    const resHistoria = JSON.parse(localStorage.getItem('RespuestasHistoria'));\n    const resGeografia = JSON.parse(localStorage.getItem('RespuestasGeografia'));\n    const resCiencia = JSON.parse(localStorage.getItem('RespuestasCiencias'));\n    await Swal.fire({\n      title: 'Deportes',\n      text: deporte.pregunta,\n      icon: 'question',\n      input: 'select',\n      inputOptions: {\n        a: resDeporte[0].respuesta,\n        b: resDeporte[1].respuesta,\n        c: resDeporte[2].respuesta,\n        d: resDeporte[3].respuesta\n      }\n    }).then(isCofirmed => {\n      if (isCofirmed.value === 'd') {\n        Swal.fire({\n          title: 'Success',\n          icon: 'success'\n        }).then(isCofirmed => {\n          Swal.fire({\n            title: 'Arte',\n            text: arte.pregunta,\n            icon: 'question',\n            input: 'select',\n            inputOptions: {\n              a: resArte[0].respuesta,\n              b: resArte[1].respuesta,\n              c: resArte[2].respuesta,\n              d: resArte[3].respuesta\n            }\n          }).then(isCofirmed => {\n            if (isCofirmed.value === 'a') {\n              Swal.fire({\n                title: 'success',\n                icon: 'success'\n              }).then(isCofirmed => {\n                Swal.fire({\n                  title: 'Historia',\n                  text: historia.pregunta,\n                  icon: 'question',\n                  input: 'select',\n                  inputOptions: {\n                    a: resHistoria[0].respuesta,\n                    b: resHistoria[1].respuesta,\n                    c: resHistoria[2].respuesta,\n                    d: resHistoria[3].respuesta\n                  }\n                }).then(isCofirmed => {\n                  if (isCofirmed.value === 'c') {\n                    Swal.fire({\n                      title: 'success',\n                      icon: 'success'\n                    }).then(isCofirmed => {\n                      Swal.fire({\n                        title: 'Geografia',\n                        text: geografia.pregunta,\n                        icon: 'question',\n                        input: 'select',\n                        inputOptions: {\n                          a: resGeografia[0].respuesta,\n                          b: resGeografia[1].respuesta,\n                          c: resGeografia[2].respuesta,\n                          d: resGeografia[3].respuesta\n                        }\n                      }).then(isCofirmed => {\n                        if (isCofirmed.value === 'b') {\n                          Swal.fire({\n                            title: 'success',\n                            icon: 'success'\n                          }).then(isCofirmed => {\n                            Swal.fire({\n                              title: 'Ciencias',\n                              text: ciencias.pregunta,\n                              icon: 'question',\n                              input: 'select',\n                              inputOptions: {\n                                a: resCiencia[0].respuesta,\n                                b: resCiencia[1].respuesta,\n                                c: resCiencia[2].respuesta,\n                                d: resCiencia[3].respuesta\n                              }\n                            }).then(isCofirmed => {\n                              if (isCofirmed.value === 'd') {} else {}\n                            });\n                          });\n                        } else {\n                          Swal.fire({\n                            title: 'failure',\n                            icon: 'error'\n                          });\n                        }\n                      });\n                    });\n                  } else {\n                    Swal.fire({\n                      title: 'failure',\n                      icon: 'error'\n                    });\n                  }\n                });\n              });\n            } else {\n              Swal.fire({\n                title: 'failure',\n                icon: 'error'\n              });\n            }\n          });\n        });\n      } else {\n        Swal.fire({\n          title: 'Wrong',\n          icon: 'error'\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_index\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.play,\n        children: \"New game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"./\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default Preguntas;","map":{"version":3,"sources":["C:/Users/Sebastian/OneDrive/Softka/Preguntas-Y-Respuestas/client/src/components/Preguntas.jsx"],"names":["axios","Swal","React","Component","Preguntas","state","Deportes","Arte","Historia","Geografia","Ciencias","Respuestas","componentDidMount","preguntas","get","i","data","length","categoria","setState","obtenerpregunta","respuestas","obtenerRespuestas","JSON","parse","localStorage","getItem","id","inicio","fin","catLocalStorage","numeroAleatorio","Math","floor","random","j","setItem","stringify","idPregunta","vectorRespuestas","id_pregunta","push","play","deporte","arte","historia","geografia","ciencias","resDeporte","resArte","resHistoria","resGeografia","resCiencia","fire","title","text","pregunta","icon","input","inputOptions","a","respuesta","b","c","d","then","isCofirmed","value","render"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport React, { Component } from 'react';\r\n\r\nclass Preguntas extends Component {\r\n\r\n    state = {\r\n        Deportes: [],\r\n        Arte: [],\r\n        Historia: [],\r\n        Geografia: [],\r\n        Ciencias: [],\r\n        Respuestas: []\r\n    }\r\n\r\n    async componentDidMount(){\r\n\r\n        //Obtengo las preguntas desde la bd y las guaro en el state.\r\n        const preguntas = await axios.get('http://localhost:5000/preguntas');\r\n        for(let i = 0; i < preguntas.data.length; i++){\r\n            if(preguntas.data[i].categoria === 'Deportes/Pasatiempos'){\r\n                this.setState({Deportes: [ ...this.state.Deportes , preguntas.data[i]]});\r\n            } else if (preguntas.data[i].categoria === 'Arte y literatura'){\r\n                this.setState({Arte: [ ...this.state.Arte , preguntas.data[i]]});\r\n            } else if (preguntas.data[i].categoria === 'Historia'){\r\n                this.setState({Historia: [ ...this.state.Historia , preguntas.data[i]]});\r\n            } else if (preguntas.data[i].categoria === 'Geografia'){\r\n                this.setState({Geografia: [ ...this.state.Geografia , preguntas.data[i]]});\r\n            } else{\r\n                this.setState({Ciencias: [ ...this.state.Ciencias , preguntas.data[i]]});\r\n            }\r\n        }\r\n\r\n        /*Envio el state con las preguntas de cada categoria y escojo una de forma aleatoria, de esta forma cuando se carga la pagina ya tengo\r\n        cargadas las preguntas desde la bd y en local storage estan asignadas las que se escojieron de forma aleatoria*/\r\n        this.obtenerpregunta(this.state.Deportes, 1, 6, 'Deportes');\r\n        this.obtenerpregunta(this.state.Arte, 6, 11, 'Arte');\r\n        this.obtenerpregunta(this.state.Historia, 11, 16, 'Historia');\r\n        this.obtenerpregunta(this.state.Geografia, 16, 21, 'Geografia');\r\n        this.obtenerpregunta(this.state.Ciencias, 21, 26, 'Ciencias');\r\n\r\n        const respuestas = await axios.get('http://localhost:5000/respuestas');\r\n        this.setState({Respuestas: [...this.state.Respuestas , respuestas.data]});\r\n\r\n        this.obtenerRespuestas(this.state.Respuestas[0], JSON.parse(localStorage.getItem('Deportes')).id, 'RespuestasDeportes');\r\n        this.obtenerRespuestas(this.state.Respuestas[0], JSON.parse(localStorage.getItem('Arte')).id, 'RespuestasArte');\r\n        this.obtenerRespuestas(this.state.Respuestas[0], JSON.parse(localStorage.getItem('Historia')).id, 'RespuestasHistoria');\r\n        this.obtenerRespuestas(this.state.Respuestas[0], JSON.parse(localStorage.getItem('Geografia')).id, 'RespuestasGeografia');\r\n        this.obtenerRespuestas(this.state.Respuestas[0], JSON.parse(localStorage.getItem('Ciencias')).id, 'RespuestasCiencias');\r\n    }\r\n\r\n    obtenerpregunta(categoria, inicio, fin, catLocalStorage){\r\n\r\n        let numeroAleatorio = Math.floor(Math.random() * (fin - inicio) + inicio)\r\n        for(let j = 0; j < categoria.length; j++){\r\n            if(numeroAleatorio === categoria[j].id){\r\n                localStorage.setItem(catLocalStorage, JSON.stringify(categoria[j]));\r\n            };\r\n        };\r\n    };\r\n\r\n    obtenerRespuestas(preguntas, idPregunta, catLocalStorage){\r\n        let vectorRespuestas = [];\r\n        for (let j = 0; j < preguntas.length; j++) {\r\n            if(preguntas[j].id_pregunta === idPregunta){\r\n                vectorRespuestas.push(preguntas[j]);                \r\n            };\r\n        };\r\n        localStorage.setItem(catLocalStorage, JSON.stringify(vectorRespuestas));\r\n    };\r\n\r\n    async play() {   \r\n            \r\n        const deporte = JSON.parse(localStorage.getItem('Deportes'));\r\n        const arte = JSON.parse(localStorage.getItem('Arte'));\r\n        const historia = JSON.parse(localStorage.getItem('Historia'));\r\n        const geografia = JSON.parse(localStorage.getItem('Geografia'));\r\n        const ciencias = JSON.parse(localStorage.getItem('Ciencias'));\r\n\r\n        const resDeporte = JSON.parse(localStorage.getItem('RespuestasDeportes'));\r\n        const resArte = JSON.parse(localStorage.getItem('RespuestasArte'));\r\n        const resHistoria = JSON.parse(localStorage.getItem('RespuestasHistoria'));\r\n        const resGeografia = JSON.parse(localStorage.getItem('RespuestasGeografia'));\r\n        const resCiencia = JSON.parse(localStorage.getItem('RespuestasCiencias'));\r\n\r\n        await Swal.fire({\r\n            title: 'Deportes',\r\n            text: deporte.pregunta,\r\n            icon: 'question',\r\n            input: 'select',\r\n            inputOptions: {\r\n                a: resDeporte[0].respuesta,\r\n                b: resDeporte[1].respuesta,\r\n                c: resDeporte[2].respuesta,\r\n                d: resDeporte[3].respuesta\r\n            }\r\n        }).then(isCofirmed => {\r\n            if(isCofirmed.value === 'd'){\r\n                Swal.fire({\r\n                    title: 'Success',\r\n                    icon: 'success'\r\n                }).then( isCofirmed => {\r\n                    Swal.fire({\r\n                        title: 'Arte',\r\n                        text: arte.pregunta,\r\n                        icon: 'question',\r\n                        input: 'select',\r\n                        inputOptions: {\r\n                            a: resArte[0].respuesta,\r\n                            b: resArte[1].respuesta,\r\n                            c: resArte[2].respuesta,\r\n                            d: resArte[3].respuesta\r\n                        }\r\n                    }).then(isCofirmed =>{\r\n                        if(isCofirmed.value ==='a'){\r\n                            Swal.fire({\r\n                                title: 'success',\r\n                                icon: 'success'\r\n                            })\r\n                            .then(isCofirmed =>{\r\n                                Swal.fire({\r\n                                    title: 'Historia',\r\n                                    text: historia.pregunta,\r\n                                    icon: 'question',\r\n                                    input: 'select',\r\n                                    inputOptions: {\r\n                                        a: resHistoria[0].respuesta,\r\n                                        b: resHistoria[1].respuesta,\r\n                                        c: resHistoria[2].respuesta,\r\n                                        d: resHistoria[3].respuesta\r\n                                    }\r\n                                })\r\n                                .then(isCofirmed => {\r\n                                    if(isCofirmed.value === 'c'){\r\n                                        Swal.fire({\r\n                                            title: 'success',\r\n                                            icon: 'success'\r\n                                        })\r\n                                        .then(isCofirmed => {\r\n                                            Swal.fire({\r\n                                                title: 'Geografia',\r\n                                                text: geografia.pregunta,\r\n                                                icon: 'question',\r\n                                                input: 'select',\r\n                                                inputOptions: {\r\n                                                    a: resGeografia[0].respuesta,\r\n                                                    b: resGeografia[1].respuesta,\r\n                                                    c: resGeografia[2].respuesta,\r\n                                                    d: resGeografia[3].respuesta\r\n                                                }\r\n                                            })\r\n                                            .then(isCofirmed => {\r\n                                                if(isCofirmed.value === 'b'){\r\n                                                    Swal.fire({\r\n                                                        title: 'success',\r\n                                                        icon: 'success'\r\n                                                    })\r\n                                                    .then(isCofirmed => {\r\n                                                        Swal.fire({\r\n                                                            title: 'Ciencias',\r\n                                                            text: ciencias.pregunta,\r\n                                                            icon: 'question',\r\n                                                            input: 'select',\r\n                                                            inputOptions: {\r\n                                                                a: resCiencia[0].respuesta,\r\n                                                                b: resCiencia[1].respuesta,\r\n                                                                c: resCiencia[2].respuesta,\r\n                                                                d: resCiencia[3].respuesta\r\n                                                            }\r\n                                                        })\r\n                                                        .then(isCofirmed =>{\r\n                                                            if(isCofirmed.value === 'd'){\r\n\r\n                                                            }else{\r\n\r\n                                                            }\r\n                                                        })\r\n                                                    })\r\n                                                }else{\r\n                                                    Swal.fire({\r\n                                                        title: 'failure',\r\n                                                        icon: 'error'\r\n                                                    })\r\n                                                }\r\n                                            })\r\n                                        })\r\n                                    } else {\r\n                                        Swal.fire({\r\n                                            title: 'failure',\r\n                                            icon: 'error'\r\n                                        })\r\n                                    }\r\n                                })\r\n                            })\r\n                        } else {\r\n                            Swal.fire({\r\n                                title: 'failure',\r\n                                icon: 'error'\r\n                            })\r\n                        }\r\n                    })\r\n                })\r\n            } else {\r\n                Swal.fire({\r\n                    title: 'Wrong',\r\n                    icon: 'error'\r\n                })\r\n            }\r\n        })\r\n\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <div className='container_index'>\r\n                <button onClick={this.play}>New game</button>\r\n                <a href='./'>Back</a>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Preguntas;"]},"metadata":{},"sourceType":"module"}